{"version":3,"sources":["positionReducer.js"],"names":[],"mappings":";;;;;;kBAMe,YAAiD;MAAxC,8DAAQ,uBAAa,SAAb,gBAAgC;MAAR,sBAAQ;;;AAE9D,UAAO,OAAO,IAAP;;AAEL,SAAK,YAAY,sBAAZ;AAAmC;AACtC,eAAO,OAAO,OAAP,CAD+B;OAAxC;;AAFF,SAMO,YAAY,eAAZ;AAA4B;AAC/B,4CAAW,SAAO,OAAO,OAAP,EAAlB,CAD+B;OAAjC;;AANF,SAUO,YAAY,aAAZ;AAA0B;AAC7B,YAAI,qBAAoB,iBAAE,SAAF,CAAY,KAAZ,EAAkB,UAAC,IAAD,EAAQ;AAAC,iBAAO,KAAK,EAAL,KAAY,OAAO,OAAP,CAAe,EAAf,CAApB;SAAR,CAAtC,CADyB;AAE7B,4CAAW,MAAM,KAAN,CAAY,CAAZ,EAAc,kBAAd,KACH,OAAO,OAAP,sBACG,MAAM,KAAN,CAAY,qBAAqB,CAArB,GAFvB,CAF6B;OAA/B;;AAVF;AAiBW;;AAEP,eAAO,KAAP,CAFO;OAAT;AAjBF,GAF8D;CAAjD;;AAJf;;IAAY;;AACZ;;;;AACA;;;;;;;;;;AA0BC","file":"positionReducer-compiled.js","sourcesContent":["\n\nimport * as actionTypes from '../../actions/actionTypes';\nimport initialState from '../initialState.js'\nimport _ from 'lodash';\n\nexport default function(state = initialState.positions, action) {\n\n  switch(action.type) {\n\n    case actionTypes.LOAD_POSITIONS_SUCCESS:{\n      return action.payload;\n    }\n\n    case actionTypes.CREATE_POSITION:{\n      return [...state, action.payload];\n    }\n\n    case actionTypes.EDIT_POSITION:{\n      let indexOfEditElement= _.findIndex(state,(item)=>{return item.id === action.payload.id});\n      return [...state.slice(0,indexOfEditElement),\n              action.payload,\n              ...state.slice(indexOfEditElement + 1 )]\n    }\n\n    default: {\n      /* Return original state if no actions were consumed. */\n      return state;\n    }\n  }\n};\n"]}