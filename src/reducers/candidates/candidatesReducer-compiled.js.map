{"version":3,"sources":["candidatesReducer.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;IAAY;;AACZ;;;;AAEA,IAAM,OAAO,SAAP,IAAO,GAA6B;MAApB,8DAAQ,kBAAY;MAAR,sBAAQ;;;AAExC,UAAO,OAAO,IAAP;;AAEL,SAAK,MAAM,uBAAN;AACC,0BAAW,OACA,OAAO,QAAP,CAAgB,QAAhB,CAAyB,UAAzB,CADX,CADN;AAGE,YAHF;;AAFF;AAOW;AACP,eAAO,KAAP,CADO;OAAT;AAPF,GAFwC;CAA7B;;AAeb,IAAM,eAAe,SAAf,YAAe,GAAuB;MAAtB,8DAAQ,kBAAc;MAAV,sBAAU;;AAC1C,UAAQ,OAAO,IAAP;AACN,SAAK,MAAM,uBAAN;AAA+B;AAClC,eAAO,OAAO,QAAP,CAAgB,MAAhB,CAD2B;OAApC;AADF,GAD0C;AAM1C,SAAO,KAAP,CAN0C;CAAvB;;AASrB,IAAM,mBAAiB,4BAAgB;AACrC,QAAM,IAAN;AACA,gBAAc,YAAd;CAFqB,CAAjB;;kBAKS","file":"candidatesReducer-compiled.js","sourcesContent":["\"use strict\";\n\nimport * as types from '../../actions/actionTypes';\nimport {combineReducers} from 'redux'\n\nconst byId = function(state = {}, action) {\n\n  switch(action.type) {\n\n    case types.LOAD_CANDIDATES_SUCCESS:\n          return {...state,\n                  ...action.response.entities.candidates};\n      break;\n\n    default: {\n      return state;\n    }\n  }\n};\n\nconst candidateIds = (state = [], action)=> {\n  switch (action.type) {\n    case types.LOAD_CANDIDATES_SUCCESS: {\n      return action.response.result;\n    }\n  }\n  return state;\n};\n\nconst candidatesModule=combineReducers({\n  byId: byId,\n  candidateIds: candidateIds\n});\n\nexport default candidatesModule;\n\n\n"]}